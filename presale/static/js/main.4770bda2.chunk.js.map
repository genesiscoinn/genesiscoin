{"version":3,"sources":["components/connectors/injected.js","App.js","reportWebVitals.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","App","contract","raiseWallet","useState","raisedAmount","setRaisedAmount","myContribution","SetMyContribution","myToken","setMyToken","tkAmount","setTkAmount","currency","setCurrency","bnbvalue","setBNBValue","crowdsale","setCrowdsale","useWeb3React","active","account","library","activate","connector","chainId","deactivate","balance","setBalance","a","console","log","eth","Contract","Abi","utils","getBalance","fromWei","raiseBlnc","parseFloat","toFixed","methods","getContribution","call","contribution","rate","tokenRate","blnc","toWei","val","sendTransaction","from","to","value","setMethods","swal","message","title","text","icon","buttons","dangerMode","then","willDelete","withdraw","send","claim","setBlnc","setCrowdsaleMethod","useEffect","className","src","href","target","substring","onClick","onInput","e","type","id","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getLibrary","provider","Web3","document","getElementById"],"mappings":"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","file":"static/js/main.4770bda2.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 97, 56],\n})","import { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useState } from \"react\";\nimport { injected } from \"./components/connectors/injected\";\nimport {Abi} from \"./contractAbi.json\";\nimport swal from \"sweetalert\";\n\nfunction App() {\n  \n  const contract = \"0x11a0Fd64b16C6F8E25566c570D13283961542850\";\n  \n  const raiseWallet = \"0x11a0Fd64b16C6F8E25566c570D13283961542850\";\n\n  const rate = 120000000000;\n\n  const [raisedAmount, setRaisedAmount] = useState(0);\n\n  const [myContribution, SetMyContribution] = useState(0);\n\n  const [myToken, setMyToken] = useState(0);\n\n  const [tkAmount, setTkAmount] = useState(0);\n\n  const [currency, setCurrency] = useState(\"N/A\");\n\n  const [bnbvalue, setBNBValue] = useState(0);\n\n  const [crowdsale, setCrowdsale] = useState({});\n\n  const { active, account, library, connector, activate, deactivate, chainId} = useWeb3React();\n  const [error, setError] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  const [value, setValue] = useState(0);\n\n  async function connect(){\n    try {\n      await activate(injected);\n    } catch (error) {\n      console.log('error', error)\n    }\n  }\n\n  async function setCrowdsaleMethod(){\n    if(active){\n      const crowdsale = await new library.eth.Contract(Abi, contract);\n      \n      var raiseBlnc = await library.utils.fromWei(await library.eth.getBalance(raiseWallet), \"ether\");\n\n      (raiseBlnc!=0) ? setRaisedAmount(parseFloat(raiseBlnc).toFixed(3)):setRaisedAmount(raiseBlnc);\n\n      let contribution = await library.utils.fromWei(await crowdsale.methods.getContribution(account).call(),\"ether\");\n\n      SetMyContribution(contribution);\n\n      const tokenRate = await crowdsale.methods.rate().call();\n      setMyToken((tokenRate * contribution));\n\n      setCrowdsale(crowdsale);\n    }\n  }\n\n\n  async function disconnect(){\n    try {\n      await deactivate();\n    } catch (error) {\n      console.log('error', error)\n    }\n  }\n\n  async function setBlnc(){\n    if(active){\n      let blnc = await library.eth.getBalance(account);\n\n      blnc = await library.utils.fromWei(blnc, 'ether');\n      if(blnc != 0){\n        setBalance(parseFloat(blnc).toFixed(3));\n      } else {\n        setBalance(blnc);\n      }\n    }\n  }\n\n  function setCurrencyMethod(){\n    if(chainId){\n      if(chainId == 1){\n        setCurrency(\"ETH\");\n      } else if(chainId == 97 || chainId == 56){\n        setCurrency(\"BNB\");\n      }\n    }\n  }\n\n  async function sendTransaction(){\n    try {            \n      let val = await library.utils.toWei(bnbvalue, \"ether\");\n\n      await library.eth.sendTransaction({from: account, to: contract, value: val});\n\n      setMethods();\n\n      setBNBValue(0)\n\n    } catch (error) {\n      swal(\"\", error.message, 'error');\n    }\n  }\n\n  function calculateToken(){\n    let tkamount = bnbvalue * rate;\n    setTkAmount(tkamount);\n  }\n\n  async function withdraw(){\n    swal({\n      title: \"Are you sure?\",\n      text: \"Emergency withdraw will cost you 10% deduction in your total contribution.\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n    .then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          await crowdsale.methods.withdraw().send({from: account});\n          setMethods();\n        } catch (error) {\n          swal('', error.message, 'error');\n        }\n      } else {\n        swal(\"Good! You can claim your tokens.\");\n        return;\n      }\n    });\n  }\n\n  async function claim(){\n    try {\n      await crowdsale.methods.claim().send({from: account});\n      setMethods();\n    } catch (error) {\n      swal('', error.message, 'error');\n    }\n  }\n\n  function setMethods(){\n    setBlnc();\n    setCrowdsaleMethod();\n  }\n\n  useEffect(()=>{\n    setMethods();\n    setCurrencyMethod();\n    calculateToken();\n  },[account, chainId, bnbvalue])\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card mt-2 col-centered presale-card\">\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-sm-6\">\n                  <div className=\"logo-area\">\n                      <img src=\"logo.png\" className=\"logo img-responsive\"/> <strong className=\"logo-text\">Genesis Coin Presale</strong>\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  {\n                    active\n                      ?\n                        <div className=\"text-center\">\n                          <span className=\"account float-right\">\n\n                              <span className=\"balance\">{`${balance} ${currency}`}</span>\n                            <a className=\"white\" href={`https://bscscan.com/address/${account}`} target=\"new\">\n                              {`${account.substring(0,6)}.....${account.substring(38)}`}\n                            </a>\n                          </span>\n                        </div>\n                      :\n                        <button onClick={connect} className=\"connect-btn btn btn-sm btn-primary float-right\">Connect</button>\n                  }\n                </div>\n              </div>\n            </div>\n\n              {\n                account \n                  ?\n                    <div className=\"card-body form-body\">\n                      <form>\n                        <div className=\"form-group\">\n                          <span className=\"raise-amount float-right\">(Raised: {`${raisedAmount} ${currency}`})</span>\n                          <label>BNB Amount:</label>\n                          <input value={bnbvalue} onInput={e => setBNBValue(e.target.value)} className=\"form-control\" type=\"number\" id=\"bnb\" placeholder=\"Enter your BNB contribution\"/>\n                          {\n                            tkAmount ? <span>{tkAmount} GC</span>:''\n                          }\n                        </div>\n                        <button type=\"button\" className=\"send btn btn-primary btn-sm\" onClick={sendTransaction}>Send</button>\n                      \n                      </form>\n                     \n                    </div>\n                  :''\n              }\n              <div className=\"card-header\">\n\n                <div className=\"row\">\n                  <div className=\"col-sm-6 contract-heading\">\n                      Contract Details  \n                  </div>\n                  <div className=\"col-sm-6 contract-heading\">\n                    {\n                      active ?\n                          <span className=\"float-right\">\n                          <button className=\"btn btn-sm btn-danger\" onClick={withdraw}>Withdraw <span className=\"badge badge-warning\">{`${myContribution} ${currency}`}</span></button>\n                          &nbsp;&nbsp;\n                          <button className=\"btn btn-sm btn-info\" onClick={claim}>Claim <span className=\"badge badge-warning\">{`${parseFloat(myToken).toFixed(3)}B GC`}</span></button>\n                          </span>\n                        :''\n                    }\n                  </div>\n                </div>\n\n              </div>\n              <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\">Total Supply: 1000,000,000,000,000 GC</li>\n                <li className=\"list-group-item\">Tokens For Presale: 300,000,000,000,000 GC</li>\n                <li className=\"list-group-item\">Token For Liquidity: 250,000,000,000,000 GC</li>\n                <li className=\"list-group-item\">Soft Cap: 100 BNB</li>\n                <li className=\"list-group-item\">Presale Rate: 120,000,000,000 GC</li>\n                <li className=\"list-group-item\">Pancakeswap Listing Rate: 90,000,000,000 GC</li>\n                <li className=\"list-group-item\">Liquidity in Pancakeswap: 70%</li>\n                <li className=\"list-group-item\">End Time: in 10 days</li>\n              </ul>\n          </div>\n        </div>  \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport Web3 from \"web3\";\nimport \"./styles/css/bootstrap.min.css\";\nimport \"./styles/style.css\";\n\nfunction getLibrary(provider){\n  return new Web3(provider);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}