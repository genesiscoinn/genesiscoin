{"version":3,"sources":["components/connectors/injected.js","App.js","reportWebVitals.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","App","useState","useWeb3React","active","account","library","activate","connector","chainId","deactivate","balance","setBalance","a","console","log","eth","getBalance","blnc","utils","fromWei","parseFloat","toFixed","useEffect","setBlnc","className","style","width","src","href","target","substring","onClick","for","type","id","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getLibrary","provider","Web3","document","getElementById"],"mappings":"miBACaA,EAAW,I,OAAIC,GAAkB,CAC5CC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,M,QC4G3BC,MA1Gf,WAEE,IAFa,EAMaC,mBAAS,GANtB,gCAQiEC,eAAtEC,EARK,EAQLA,OAAQC,EARH,EAQGA,QAASC,EARZ,EAQYA,QAAoBC,GARhC,EAQqBC,UARrB,EAQgCD,UAAsBE,GARtD,EAQ0CC,WAR1C,EAQsDD,SARtD,EASaP,mBAAS,IATtB,gCAUiBA,mBAAS,IAV1B,mBAUNS,EAVM,KAUGC,EAVH,OAWaV,mBAAS,GAXtB,+DAab,sBAAAW,EAAA,+EAEUN,EAAST,GAFnB,sDAIIgB,QAAQC,IAAI,QAAZ,MAJJ,yDAba,kEA6Bb,4BAAAF,EAAA,0DACKT,EADL,gCAEqBE,EAAQU,IAAIC,WAAWZ,GAF5C,cAEQa,EAFR,gBAGiBZ,EAAQa,MAAMC,QAAQF,EAAM,SAH7C,OAGIA,EAHJ,OAIIN,EAAWS,WAAWH,GAAMI,QAAQ,IAJxC,4CA7Ba,sBAuDb,OAvDa,UAmDbC,qBAAU,YAnDG,mCAoDXC,KACA,CAACnB,EAASI,IAGV,qBAAKgB,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,yBAAyBC,MAAO,CAACC,MAAM,SAAtD,UACE,qBAAKF,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKG,IAAI,WAAWH,UAAU,0BAEhC,qBAAKA,UAAU,WAAf,SAEIrB,EAEI,gCACE,+BAAOO,IACP,sBAAMc,UAAU,sBAAhB,SACE,mBAAGA,UAAU,QAAQI,KAAI,8CAAyCxB,GAAWyB,OAAO,MAApF,mBACMzB,EAAQ0B,UAAU,EAAE,GAD1B,gBACoC1B,EAAQ0B,UAAU,YAK1D,wBAAQC,QA9EjB,2CA8EmCP,UAAU,qCAApC,4BAORpB,EAEI,qBAAKoB,UAAU,sBAAf,SACE,iCACE,sBAAKA,UAAU,aAAf,UACE,uBAAOQ,IAAI,MAAX,yBACA,uBAAOR,UAAU,eAAeS,KAAK,SAASC,GAAG,MAAMC,YAAY,mCAErE,wBAAQX,UAAU,yBAAlB,uBAGL,aCxFJY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gCCMdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAmBC,WANvB,SAAoBC,GAClB,OAAO,IAAIC,IAAKD,IAKd,SACE,cAAC,EAAD,QAGJE,SAASC,eAAe,SAE1BhB,M","file":"static/js/main.881a1d6e.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42, 97, 56],\n})","import { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useState } from \"react\";\nimport { injected } from \"./components/connectors/injected\";\n\nfunction App() {\n  \n  const contract = \"0x4eC3f3eCBc38bb58F0045C9dfa50030662DF5812\";\n  \n  const rate = 980000000000;\n\n  const [token, setToken] = useState(0);\n\n  const { active, account, library, connector, activate, deactivate, chainId} = useWeb3React();\n  const [error, setError] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  const [value, setValue] = useState(0);\n\n  async function connect(){\n    try {\n      await activate(injected);\n    } catch (error) {\n      console.log('error', error)\n    }\n  }\n\n  async function disconnect(){\n    try {\n      await deactivate();\n    } catch (error) {\n      console.log('error', error)\n    }\n  }\n\n  async function setBlnc(){\n    if(active){\n      let blnc = await library.eth.getBalance(account);\n      blnc = await library.utils.fromWei(blnc, 'ether');\n      setBalance(parseFloat(blnc).toFixed(3));\n    }\n  }\n\n  async function sendTransaction(){\n    try {\n      if(!active) {setError(\"Connect to the wallet.\"); return;}\n      \n      let val = await library.utils.toWei(value, 'ether');\n\n      setValue(val);\n\n      await library.eth.sendTransaction({from: account, to: contract, value: value});\n    } catch (error) {\n      console.log(\"error\", error)\n    }\n  }\n\n  useEffect(()=>{\n    setBlnc();\n  },[account, chainId])\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card mt-2 col-centered\" style={{width:48+\"rem\"}}>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <img src=\"logo.png\" className=\"logo img-responsive\"/>\n                </div>\n                <div className=\"col-md-6\">\n                  {\n                    active\n                      ?\n                        <div>\n                          <span>{balance}</span>\n                          <span className=\"account float-right\">\n                            <a className=\"white\" href={`https://testnet.bscscan.com/address/${account}`} target=\"new\">\n                              {`${account.substring(0,6)}.....${account.substring(38)}`}\n                            </a>\n                          </span>\n                        </div>\n                      :\n                        <button onClick={connect} className=\"btn btn-sm btn-primary float-right\">Connect</button>\n                  }\n                </div>\n              </div>\n            </div>\n\n              {\n                account \n                  ?\n                    <div className=\"card-body form-body\">\n                      <form>\n                        <div className=\"form-group\">\n                          <label for=\"bnb\">BNB Amount:</label>\n                          <input className=\"form-control\" type=\"number\" id=\"bnb\" placeholder=\"Enter your BNB contribution\"/>\n                        </div>\n                        <button className=\"btn btn-primary btn-sm\">Send</button>\n                      </form>\n                    </div>\n                  :''\n\n              }\n          </div>\n        </div>  \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport Web3 from \"web3\";\nimport \"./styles/css/bootstrap.min.css\";\nimport \"./styles/style.css\";\n\nfunction getLibrary(provider){\n  return new Web3(provider);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}