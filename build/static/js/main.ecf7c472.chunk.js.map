{"version":3,"sources":["components/connectors/injected.js","App.js","reportWebVitals.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","App","contract","raiseWallet","useState","raisedAmount","setRaisedAmount","tkAmount","setTkAmount","currency","setCurrency","bnbvalue","setBNBValue","useWeb3React","active","account","library","activate","connector","chainId","deactivate","error","setError","balance","setBalance","a","console","log","eth","getBalance","blnc","utils","fromWei","parseFloat","toFixed","raiseBlnc","toWei","val","sendTransaction","from","to","value","useEffect","setBlnc","className","style","width","src","href","target","substring","onClick","onInput","e","type","id","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getLibrary","provider","Web3","document","getElementById"],"mappings":"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","file":"static/js/main.ecf7c472.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 97, 56],\n})","import { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useState } from \"react\";\nimport { injected } from \"./components/connectors/injected\";\n\nfunction App() {\n  \n  const contract = \"0x1f5Ac03f0853Ca3c1aBBaCf9F56f30AAE683Cb49\";\n  \n  const raiseWallet = \"0x66bc751ceda9CEf57c9DbB6691A88DB46529EcFd\";\n\n  const hardCap = 7000;\n\n  const rate = 460000000000;\n\n  const [raisedAmount, setRaisedAmount] = useState(0);\n\n  const [tkAmount, setTkAmount] = useState(0);\n\n  const [currency, setCurrency] = useState(\"N/A\");\n\n  const [bnbvalue, setBNBValue] = useState(0);\n\n  const { active, account, library, connector, activate, deactivate, chainId} = useWeb3React();\n  const [error, setError] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  const [value, setValue] = useState(0);\n\n  async function connect(){\n    try {\n      await activate(injected);\n    } catch (error) {\n      console.log('error', error)\n    }\n  }\n\n  async function disconnect(){\n    try {\n      await deactivate();\n    } catch (error) {\n      console.log('error', error)\n    }\n  }\n\n  async function setBlnc(){\n    if(active){\n      let blnc = await library.eth.getBalance(account);\n\n      blnc = await library.utils.fromWei(blnc, 'ether');\n      if(blnc != 0){\n        setBalance(parseFloat(blnc).toFixed(3));\n      } else {\n        setBalance(blnc);\n      }\n\n      let raiseBlnc = await library.eth.getBalance(raiseWallet);\n      \n      raiseBlnc = await library.utils.fromWei(raiseBlnc, \"ether\");\n\n      (raiseBlnc!=0) ? setRaisedAmount(parseFloat(raiseBlnc).toFixed(2)):setRaisedAmount(raiseBlnc);\n\n    }\n  }\n\n  function setCurrencyMethod(){\n    if(chainId){\n      if(chainId == 1){\n        setCurrency(\"ETH\");\n      } else if(chainId == 97 || chainId == 56){\n        setCurrency(\"BNB\");\n      }\n    }\n  }\n\n  async function sendTransaction(){\n    try {\n\n      if(bnbvalue < 0.1 || bnbvalue > 10){\n        setError(\"BNB must be between 0.1 and 10\");\n        return;\n      }\n\n      if(!active) {setError(\"Connect to the wallet.\"); return;}\n\n      if(chainId!== 97){setError(\"Only for test network at this time. ðŸ˜Š\"); return;}\n            \n      let val = await library.utils.toWei(bnbvalue, \"ether\");\n\n      console.log('val', val)\n\n      await library.eth.sendTransaction({from: account, to: contract, value: val});\n\n    } catch (error) {\n      console.log(\"error\", error)\n    }\n  }\n\n  function calculateToken(){\n    let tkamount = bnbvalue * rate;\n    setTkAmount(tkamount);\n  }\n\n  useEffect(()=>{\n    setBlnc();\n    setCurrencyMethod();\n    calculateToken();\n  },[account, chainId, bnbvalue])\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card mt-2 col-centered\" style={{width:30+\"rem\"}}>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <img src=\"logo.png\" className=\"logo img-responsive\"/>\n                </div>\n                <div className=\"col-md-6\">\n                  {\n                    active\n                      ?\n                        <div>\n                          <span className=\"account float-right\">\n\n                              <span className=\"balance\">{`${balance} ${currency}`}</span>\n                            <a className=\"white\" href={`https://testnet.bscscan.com/address/${account}`} target=\"new\">\n                              {`${account.substring(0,6)}.....${account.substring(38)}`}\n                            </a>\n                          </span>\n                        </div>\n                      :\n                        <button onClick={connect} className=\"btn btn-sm btn-primary float-right\">Connect</button>\n                  }\n                </div>\n              </div>\n            </div>\n\n              {\n                account \n                  ?\n                    <div className=\"card-body form-body\">\n                      <form>\n                        <div className=\"form-group\">\n                          <label>BNB Amount:</label>\n                          <span className=\"float-right\">(Raised: {`${raisedAmount} / ${hardCap} ${currency}`})</span>\n                          <input value={bnbvalue} onInput={e => setBNBValue(e.target.value)} className=\"form-control\" type=\"number\" id=\"bnb\" placeholder=\"Enter your BNB contribution\"/>\n                          {\n                            tkAmount ? <span>{tkAmount}</span>:''\n                          }\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={sendTransaction}>Send</button>\n                          {\n                            error ? <span className=\"alert alert-warning error-msg\">{error}</span>:''\n                          }\n                      </form>\n                    </div>\n                  :''\n\n              }\n          </div>\n        </div>  \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport Web3 from \"web3\";\nimport \"./styles/css/bootstrap.min.css\";\nimport \"./styles/style.css\";\n\nfunction getLibrary(provider){\n  return new Web3(provider);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}